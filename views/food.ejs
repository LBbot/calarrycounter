<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Calarry Counter - Foods</title>
    <link type="text/css" href="/style.css" rel="stylesheet">

</head>

<body>
    <!-- Import header.ejs (the dash after % means it won't escape any HTML characters) -->
    <%- include("header") %>

    <div class = "content">

    <% if (typeof errorList !== "undefined") { %>
        <ul class = "errorWarnings">
            <h3>Error(s) submitting form:</h3>
            <% for (let i = 0; i < errorList.length; i += 1) { %>
                <li>- <%= errorList[i] %></li>
            <% } %>
        </ul>
    <% } %>

        <form action="/food" method = "post">
            <label for="name">Name:  </label>
            <input type="text" id="name" name="name"
                <% if (typeof errorList !== "undefined") { %>
                    value="<%= previousUserInput[0] %>"
                <% } %>
            ><br>

            <label for="kcalPer100">Calories (kcal): </label>
            <input type="text" id="kcalPer100" name="kcalPer100"
                <% if (typeof errorList !== "undefined") { %>
                    value="<%= previousUserInput[1] %>"
                <% } %>
            ><br>

            <label for="fatPer100">Fat (g): </label>
            <input type="text" id="fatPer100" name="fatPer100"
                <% if (typeof errorList !== "undefined") { %>
                    value="<%= previousUserInput[2] %>"
                <% } %>
            ><br>

            <label for="saturatedFatPer100">Of which saturates (g): </label>
            <input type="text" id="saturatedFatPer100" name="saturatedFatPer100"
                <% if (typeof errorList !== "undefined") { %>
                    value="<%= previousUserInput[3] %>"
                <% } %>
            ><br>

            <label for="carbohydratesPer100">Carbohydrates (g): </label>
            <input type="text" id="carbohydratesPer100" name="carbohydratesPer100"
                <% if (typeof errorList !== "undefined") { %>
                    value="<%= previousUserInput[4] %>"
                <% } %>
            ><br>

            <label for="sugarsPer100">Sugar (g): </label>
            <input type="text" id="sugarsPer100" name="sugarsPer100"
                <% if (typeof errorList !== "undefined") { %>
                    value="<%= previousUserInput[5] %>"
                <% } %>
            ><br>

            <label for="fibrePer100">Fibre (g): </label>
            <input type="text" id="fibrePer100" name="fibrePer100"
                <% if (typeof errorList !== "undefined") { %>
                    value="<%= previousUserInput[6] %>"
                <% } %>
            ><br>

            <label for="proteinPer100">Protein (g): </label>
            <input type="text" id="proteinPer100" name="proteinPer100"
                <% if (typeof errorList !== "undefined") { %>
                    value="<%= previousUserInput[7] %>"
                <% } %>
            ><br>

            <label for="saltPer100">Salt (g): </label>
            <input type="text" id="saltPer100" name="saltPer100"
                <% if (typeof errorList !== "undefined") { %>
                    value="<%= previousUserInput[8] %>"
                <% } %>
            ><br>

            <label for="averageServing">Average serving: </label>
            <input type="text" id="averageServing" name="averageServing"
                <% if (typeof errorList !== "undefined") { %>
                    value="<%= previousUserInput[9] %>"
                <% } %>
            ><br>

            <input type="submit" class="js-submit" value="Add new food">
        </form>

        <ul class = "infolist">
            <li>- Average serving may be in grams, mililitres or any other appropriate measurement.</li>
            <li>- Nutritional figures in grams/kcal are counted per 100 grams of the food item.</li>
            <li>- Decimal figures are rounded down to two places. </li>
            <li>- If the information is unavailale, unlisted or not applicable - leave it blank.</li>
        </ul>

    <!-- tablecontainer CSS allows the table to have it's own horizontal scroll on smaller screens. -->
    <div class="tablecontainer">
        <table>
            <tablehead>
                <th>Name</th>
                <th>Calories</th>
                <th>Fat</th>
                <th>Sat. fats</th>
                <th>Carbs</th>
                <th>Sugars</th>
                <th>Fibre</th>
                <th>Protein</th>
                <th>Salt</th>
                <th>Serving</th>
            </tablehead>
            <!-- Loop through the different foods in main food list -->
            <% for (let foodNum = 0; foodNum < foodList.rows.length; foodNum+=1) { %>
                <tr>
                    <!-- Loop through properties of food (nutritional values) to fill table-->
                    <% for (let nutritionNum = 0; nutritionNum < 10; nutritionNum+=1) {
                        // Note empties as 0 but with an asterisk denoting lack of information (as opposed to actual 0)
                        if (foodList.rows[foodNum]["value"][nutritionNum] === "") { %>
                            <td>*0</td>
                        <% } else { %>
                            <td><%=foodList.rows[foodNum]["value"][nutritionNum]%></td>
                        <% } %>
                    <% } %>
                    <!-- Edit and delete will pass food id param in URLs for Express to use -->
                    <td><a href="/edit-food-item/<%= foodList.rows[foodNum]["id"] %>" class="editbutton">Edit</a></td>
                    <td><button class="deletebutton" data-id ="<%= foodList.rows[foodNum]["id"] %>">Delete</button></td>
                </tr>
            <% } %>
        </table>
        </div>


        <!-- Modal only appears on delete-->
       <div class="myModal myModal--hidden">
       <div class="modalContent">
           <p>Are you sure you want to delete this item?</p>
           <br>
           <p class = "quote"></p>
           <form method = "post"><button class="ok js-submit">Delete</button></form>
           <button class="cancel cancelbutton">Cancel</button>
       </div>
       </div>


    <p>Amounts marked *0 denote an unlisted or unavailable number.</p>

    <%- include("footer") %>
</div>




<script>
function summonModal(evt) {
    "use strict";
    const deleteIcon = evt.target;
    const number = deleteIcon.getAttribute("data-id");
    // Prep the item to show in the modal, sanitise it
    const quoteForList = document.querySelector(".quote");
    const inputValue = evt.target.parentNode.parentNode.childNodes[3].textContent;
    const textNodeInput = document.createTextNode(inputValue);
    quoteForList.innerHTML = ""; // Resets the quote so it doesn't add to old ones.
    quoteForList.appendChild(textNodeInput);

    // Show modal
    const backgroundModal = document.querySelector(".myModal");
    const modalBox = document.querySelector(".modalContent");
    backgroundModal.classList.remove("myModal--hidden");

    const yesButton = document.querySelector(".ok");
    const noButton = document.querySelector(".cancel");
    yesButton.parentNode.action = "/delete-food-item/" + number;


    function killModal (e) {
        if (e.target === backgroundModal || e.target === noButton) {
            backgroundModal.classList.add("myModal--hidden");
            window.removeEventListener("click", killModal);
            noButton.removeEventListener("click", killModal);
        }
    }
    noButton.addEventListener("click", killModal);
    window.addEventListener("click", killModal);
}

const deleteButtons = document.querySelectorAll(".deletebutton");
deleteButtons.forEach(function (deleteButton) {
    deleteButton.addEventListener("click", summonModal);
});

</script>

</body>
</html>
